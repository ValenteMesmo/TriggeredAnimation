using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;
using TriggeredAnimation;

namespace MonogameAutoGeneratedContent{
    public static class SpriteSheet_Carolina
    {
        private static Texture2D Texture;
        
        public static SimpleAnimation Load_Boca(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(0, 0, 128, 46),
                new Rectangle(128, 0, 128, 46),
                new Rectangle(256, 0, 128, 46),
                new Rectangle(384, 0, 128, 46),
                new Rectangle(512, 0, 128, 46)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Boca_entristecendo(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(640, 0, 128, 53),
                new Rectangle(768, 0, 128, 53),
                new Rectangle(896, 0, 128, 53),
                new Rectangle(1024, 0, 128, 53),
                new Rectangle(1152, 0, 128, 53)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Boca_triste(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(1280, 0, 32, 13),
                new Rectangle(1312, 0, 32, 13),
                new Rectangle(1344, 0, 32, 13),
                new Rectangle(1376, 0, 32, 13),
                new Rectangle(1408, 0, 32, 13),
                new Rectangle(1440, 0, 32, 13)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Botao_redondo(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(1472, 0, 48, 30)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Botao_redondo_apertado(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(1520, 0, 26, 22)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Botao_redondo_apertando(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(1546, 0, 66, 57),
                new Rectangle(1612, 0, 66, 57),
                new Rectangle(1678, 0, 66, 57),
                new Rectangle(1744, 0, 66, 57)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Corpo(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(1810, 0, 134, 223)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Corpo_ps4_aberto(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(0, 223, 378, 102)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Corpo_ps4_abrindo(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(378, 223, 379, 103),
                new Rectangle(378, 223, 379, 103),
                new Rectangle(757, 223, 379, 103),
                new Rectangle(1136, 223, 379, 103),
                new Rectangle(1515, 223, 379, 103),
                new Rectangle(0, 326, 379, 103),
                new Rectangle(379, 326, 379, 103),
                new Rectangle(758, 326, 379, 103),
                new Rectangle(1137, 326, 379, 103),
                new Rectangle(1516, 326, 379, 103),
                new Rectangle(0, 429, 379, 103),
                new Rectangle(379, 429, 379, 103),
                new Rectangle(758, 429, 379, 103),
                new Rectangle(1137, 429, 379, 103),
                new Rectangle(1516, 429, 379, 103),
                new Rectangle(0, 532, 379, 103)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Olhos_abertos(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(379, 532, 77, 60),
                new Rectangle(456, 532, 77, 60)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Olhos_fechando(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(533, 532, 79, 60),
                new Rectangle(612, 532, 79, 60),
                new Rectangle(691, 532, 79, 60),
                new Rectangle(770, 532, 79, 60),
                new Rectangle(849, 532, 79, 60),
                new Rectangle(849, 532, 79, 60),
                new Rectangle(849, 532, 79, 60),
                new Rectangle(849, 532, 79, 60),
                new Rectangle(849, 532, 79, 60),
                new Rectangle(849, 532, 79, 60)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

        public static SimpleAnimation Load_Rascunho(ContentManager content, int X = 0, int Y = 0)
        {
            if (Texture == null)
               Texture = content.Load<Texture2D>("Carolina");
            var animation = new SequentialFrameChooser(60, new Rectangle[]
            {
                
                new Rectangle(928, 532, 312, 304),
                new Rectangle(1240, 532, 312, 304),
                new Rectangle(1552, 532, 312, 304),
                new Rectangle(0, 836, 312, 304),
                new Rectangle(312, 836, 312, 304),
                new Rectangle(624, 836, 312, 304),
                new Rectangle(936, 836, 312, 304),
                new Rectangle(1248, 836, 312, 304),
                new Rectangle(1560, 836, 312, 304)
            });

            return new SimpleAnimation(Texture, animation, X, Y);
        }

    }
}