using Microsoft.Xna.Framework.Content;
using MonogameAutoGeneratedContent;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using TriggeredAnimation;

namespace WindowsAnimation
{
    public class RoundButtonAnimatorFactory
    {
        private InputManager inputs;

        public RoundButtonAnimatorFactory(InputManager inputs)
        {
            this.inputs = inputs;
        }

        public Animator Create(ContentManager Content, int X, int Y, Func<InputManager, bool> Condition)
        {
            var botao = SpriteSheet_Carolina.Load_Botao_redondo(Content, 15, 15);
            var botao_apertando = SpriteSheet_Carolina.Load_Botao_redondo_apertando(Content);
            botao_apertando.SetFrameRate(20);
            var botao_desapertando = SpriteSheet_Carolina.Load_Botao_redondo_apertando(Content).Reverse();
            botao_desapertando.SetFrameRate(20);
            var botao_apertado = SpriteSheet_Carolina.Load_Botao_redondo_apertado(Content, 19, 17);

            return new Animator(
                X,
                Y,
                new AnimationTransitionRuleWithInput(botao, botao_apertando, () => Condition(inputs)),
                new AnimationTransitionRule(botao_apertando, botao_apertado),
                new AnimationTransitionRuleWithInput(botao_apertado, botao_desapertando, () => Condition(inputs) == false),
                new AnimationTransitionRule(botao_desapertando, botao)
            );
        }
    }
}
