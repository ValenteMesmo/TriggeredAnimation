using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using WindowsAnimation;
using MonogameAutoGeneratedContent;

namespace TriggeredAnimation
{
    public class Game1 : Game
    {
        GraphicsDeviceManager graphics;
        SpriteBatch spriteBatch;

        public Game1()
        {
            graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";
        }

        AudioService AudioService;
        private TextureAnimation Cartolina_mouth;
        private TextureAnimation Cartolina_Body;
        private TextureAnimation Cartolina_eye;
        private TextureAnimation OlhosFechandos;
        private TextureAnimation Cartolina_Idle_Olhos_bem_abertos;

        protected override void Initialize()
        {
            base.Initialize();
            AudioService = new AudioService();
        }

        protected override void LoadContent()
        {
            spriteBatch = new SpriteBatch(GraphicsDevice);
            Cartolina_eye = File_eyes.CreateAnimation(Content);
            Cartolina_mouth = File_eyes2.CreateAnimation(Content);
            Cartolina_Body = File_idle.CreateAnimation(Content).AsLoop();
            OlhosFechandos = File_eyes_muito_abertos.CreateAnimation(Content);
            Cartolina_Idle_Olhos_bem_abertos = File_eyes_muito_abertos.CreateAnimation(Content);
        }

        protected override void UnloadContent()
        {
        }

        protected override void Update(GameTime gameTime)
        {
            base.Update(gameTime);
        }       
        
        protected override void Draw(GameTime gameTime)
        {
            GamePadState gamePadState = GamePad.GetState(PlayerIndex.One);

            var width = 131;
            var height = 132;

            var x = width;
            var y = height;

            if (AudioService.Current > 0)
            {
                x = 0;
                y = 0;
            }

            GraphicsDevice.Clear(Color.Blue);
            spriteBatch.Begin();
            
            Cartolina_Body.Draw(spriteBatch, 0, 0, Color.White);
            Cartolina_eye.Draw(
                spriteBatch,
                24 + (int)(gamePadState.ThumbSticks.Left.X * 5),
                71 - (int)(gamePadState.ThumbSticks.Left.Y * 2),
                Color.White);

            //OlhosFechandos.Draw(spriteBatch, 14, 58, Color.White);
            Cartolina_mouth.Draw(spriteBatch, 24, 98, Color.White);
            Cartolina_Idle_Olhos_bem_abertos.Draw(
                spriteBatch,
                14,
                56,
                Color.White);

            spriteBatch.End();
            base.Draw(gameTime);
        }
    }
}
