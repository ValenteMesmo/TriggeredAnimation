using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using MonogameAutoGeneratedContent;
using System;

namespace TriggeredAnimation
{
    public class Game1 : Game
    {
        GraphicsDeviceManager graphics;
        SpriteBatch spriteBatch;

        public Game1()
        {
            graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";
        }

        AudioService AudioService;

        protected override void Initialize()
        {
            base.Initialize();
            AudioService = new AudioService();
        }

        SimpleAnimation Corpo;
        SimpleAnimation Pupila;
        SimpleAnimation Controle;
        Animator Boca;
        Animator Palpebra;
        SimpleAnimation Mao_esquerda;
        SimpleAnimation Mao_direita;

        protected override void LoadContent()
        {
            spriteBatch = new SpriteBatch(GraphicsDevice);

            Pupila = SpriteSheet_Carolina.Load_Pupila(Content, 75, 83);

            var Boca_padrao = SpriteSheet_Carolina.Load_Boca(Content,12).AsScaleAnimation();
            var Boca_entristecendo = SpriteSheet_Carolina.Load_Boca_entristecendo(Content, 8);
            var Boca_desentristecendo = Boca_entristecendo.Reverse();
            var Boca_triste = SpriteSheet_Carolina.Load_Boca_triste(Content, 10).AsScaleAnimation();

            Boca = new Animator(
                70, 105
                , new FlaggedAnimationTransitionRule(Boca_padrao, Boca_entristecendo, "triste")
                , new AnimationTransitionRule(Boca_entristecendo, Boca_triste)
                , new UnFlaggedAnimationTransitionRule(Boca_triste, Boca_desentristecendo, "triste")
                , new AnimationTransitionRule(Boca_desentristecendo, Boca_padrao)

            );
            Corpo = SpriteSheet_Carolina.Load_Corpo(Content, 50, 50);
            Controle = SpriteSheet_Carolina.Load_Controle(Content, 65, 130);
            Mao_esquerda = SpriteSheet_Carolina.Load_Mao_esquerda(Content, 55, 125);
            Mao_direita = SpriteSheet_Carolina.Load_Mao_direita(Content, 108, 125);
            CreatePalpebraAnimator();
        }

        private void CreatePalpebraAnimator()
        {
            var noAnimation = new EmptyAnimation();

            var PalpebrasFechando = SpriteSheet_Carolina.Load_Palpebras_fechando(Content, 4,4);
            var PalpebrasAbertas = noAnimation;
            var PalpebrasAbrindo = PalpebrasFechando.Reverse();
            var PalpebrasArregaladas = SpriteSheet_Carolina.Load_Palpebras_arregaladas(Content, 0, -5);
            var PalpebrasArregalando = SpriteSheet_Carolina.Load_Palpebras_arregalando(Content, 0, -5);
            var PalpebrasDesarregalando = PalpebrasArregalando.Reverse();

            PalpebrasAbrindo.SetFrameRate(10);
            PalpebrasFechando.SetFrameRate(10);
            PalpebrasArregalando.SetFrameRate(10);
            PalpebrasDesarregalando.SetFrameRate(10);

            Palpebra = new Animator(
                65, 68,
                new TriggeredAnimationTransitionRule(
                    PalpebrasAbertas,
                    PalpebrasFechando,
                    "piscar")
                , new AnimationTransitionRule(
                    PalpebrasFechando,
                    PalpebrasAbrindo)
                , new AnimationTransitionRule(
                    PalpebrasAbrindo,
                    PalpebrasAbertas)
                , new FlaggedAnimationTransitionRule(
                    PalpebrasAbertas,
                    PalpebrasArregalando,
                    "arregalar")
                , new AnimationTransitionRule(
                    PalpebrasArregalando,
                    PalpebrasArregaladas)
                , new UnFlaggedAnimationTransitionRule(
                    PalpebrasArregaladas,
                    PalpebrasDesarregalando,
                    "arregalar")
                , new AnimationTransitionRule(
                    PalpebrasDesarregalando,
                    PalpebrasAbertas)
            );
        }

        protected override void UnloadContent()
        {
        }

        protected override void Update(GameTime gameTime)
        {
            GamePadState gamePadState = GamePad.GetState(PlayerIndex.One);
            var keyboardState = Keyboard.GetState();

            easy_eye_X.Set(gamePadState.ThumbSticks.Right.X * 4f);
            easy_eye_Y.Set(gamePadState.ThumbSticks.Right.Y * 3f);

            easy_X.Set(gamePadState.ThumbSticks.Left.X * 6);
            easy_Y.Set(-gamePadState.ThumbSticks.Left.Y * 8);

            Palpebra.Flag("arregalar",
                gamePadState.Buttons.X == ButtonState.Pressed
                || keyboardState.IsKeyDown(Keys.X));

            Boca.Flag("triste",
                gamePadState.Buttons.A == ButtonState.Pressed
                || keyboardState.IsKeyDown(Keys.Z));

            base.Update(gameTime);
        }

        EasyValue easy_eye_X = new EasyValue(20);
        EasyValue easy_eye_Y = new EasyValue(15);

        EasyValue easy_X = new EasyValue(10);
        EasyValue easy_Y = new EasyValue(10);
        DateTime horaDePiscar;
        Random Random = new Random();

        protected override void Draw(GameTime gameTime)
        {
            var bonusX = (int)easy_X.Get();
            var bonusY = (int)easy_Y.Get();

            if (horaDePiscar < DateTime.Now)
            {
                horaDePiscar = DateTime.Now.AddSeconds(Random.Next(1, 10));
                Palpebra.ActivateTrigger("piscar");
            }

            GraphicsDevice.Clear(Color.Blue);
            spriteBatch.Begin();

            Corpo.Draw(spriteBatch);

            Pupila.Draw(spriteBatch,
                (int)(easy_eye_X.Get()),
                 (int)(easy_eye_Y.Get()));


            Palpebra.Draw(spriteBatch, 0, 0);


            Boca.Draw(spriteBatch, 0, 0);

            Controle.Draw(spriteBatch, bonusX, bonusY);
            Mao_esquerda.Draw(spriteBatch, bonusX, bonusY);
            Mao_direita.Draw(spriteBatch, bonusX, bonusY);

            spriteBatch.End();
            base.Draw(gameTime);
        }
    }
}
