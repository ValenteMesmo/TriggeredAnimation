using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using MonogameAutoGeneratedContent;
using System;
using System.Collections.Generic;
using WindowsAnimation;

namespace TriggeredAnimation
{
    public class Game1 : Game
    {
        GraphicsDeviceManager graphics;
        SpriteBatch spriteBatch;
        List<Animation> Animations = new List<Animation>();

        public Game1()
        {
            graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";

            //graphics.SynchronizeWithVerticalRetrace = false;
            //IsFixedTimeStep = false;
        }

        protected override void Initialize()
        {
            base.Initialize();
        }

        SimpleAnimation Corpo;
        Animator Boca;
        Animator Olhos;

        Animator Transformacao;

        Animator Botao_Y;
        Animator Botao_A;
        Animator Botao_X;
        Animator Botao_B;

        Animator Botao_Up;
        Animator Botao_Down;
        Animator Botao_Left;
        Animator Botao_Right;

        Animator Analog_L;
        Animator Analog_R;

        Animator Botao_R2;
        Animator Botao_R1;

        Animator Botao_L2;
        Animator Botao_L1;
        InputManager inputs;

        protected override void LoadContent()
        {
            var commonX = 100;
            var commonY = 100;

            spriteBatch = new SpriteBatch(GraphicsDevice);

            var Olhos_abertos = SpriteSheet_Carolina.Load_Olhos_abertos(Content, commonX + 63, commonY + 88);
            var Olhos_fechando = SpriteSheet_Carolina.Load_Olhos_fechando(Content, commonX + 62, commonY + 88);
            var Olhos_abrindo = Olhos_fechando.Reverse();
            Olhos_abrindo.SetFrameRate(15);
            Olhos_fechando.SetFrameRate(15);

            Olhos = new Animator(
                new TriggeredAnimationTransitionRule(Olhos_abertos, Olhos_fechando, "piscar")
                , new AnimationTransitionRule(Olhos_fechando, Olhos_abrindo)
                , new AnimationTransitionRule(Olhos_abrindo, Olhos_abertos)
            );

            var Boca_padrao = SpriteSheet_Carolina.Load_Boca(Content, commonX + 12, commonY).AsScaleAnimation();
            var Boca_entristecendo = SpriteSheet_Carolina.Load_Boca_entristecendo(Content, 8, commonY);
            var Boca_desentristecendo = Boca_entristecendo.Reverse();
            var Boca_triste = SpriteSheet_Carolina.Load_Boca_triste(Content, commonX + 10, commonY).AsScaleAnimation();

            var ps4_abrindo = SpriteSheet_Carolina.Load_Corpo_ps4_abrindo(Content, commonX - 63, commonY + 178);
            var ps4_aberto = SpriteSheet_Carolina.Load_Corpo_ps4_aberto(Content, commonX - 63, commonY + 178);
            Transformacao = new Animator(
                new AnimationTransitionRule(ps4_abrindo, ps4_aberto)
            );

            Boca = new Animator(
                40, 138
                , new FlaggedAnimationTransitionRule(Boca_padrao, Boca_entristecendo, "triste")
                , new AnimationTransitionRule(Boca_entristecendo, Boca_triste)
                , new UnFlaggedAnimationTransitionRule(Boca_triste, Boca_desentristecendo, "triste")
                , new AnimationTransitionRule(Boca_desentristecendo, Boca_padrao)
            );
            inputs = new InputManager();
            var RoundButtonAnimatorFactory = new RoundButtonAnimatorFactory(inputs);

            Botao_Y = RoundButtonAnimatorFactory.Create(Content, commonX + 194, commonY + 175, f => f.Y);
            Botao_A = RoundButtonAnimatorFactory.Create(Content, commonX + 194, commonY + 220, f => f.A);
            Botao_B = RoundButtonAnimatorFactory.Create(Content, commonX + 224, commonY + 197, f => f.B);
            Botao_X = RoundButtonAnimatorFactory.Create(Content, commonX + 164, commonY + 197, f => f.X);

            Botao_Up = RoundButtonAnimatorFactory.Create(Content, commonX - 54 + 42, commonY + 175 + 10, f => f.Dpad_Up);
            Botao_Down = RoundButtonAnimatorFactory.Create(Content, commonX - 54 + 42, commonY + 220 + 10, f => f.Dpad_Down);
            Botao_Left = RoundButtonAnimatorFactory.Create(Content, commonX - 84 + 42, commonY + 197 + 10, f => f.Dpad_Left);
            Botao_Right = RoundButtonAnimatorFactory.Create(Content, commonX - 24 + 42, commonY + 197 + 10, f => f.Dpad_Right);

            Analog_L = RoundButtonAnimatorFactory.Create(Content, commonX + 50, commonY + 220, f => f.LS);
            Analog_R = RoundButtonAnimatorFactory.Create(Content, commonX + 110, commonY + 220, f => f.RS);

            Botao_R2 = RoundButtonAnimatorFactory.Create(Content, commonX + 260, commonY + 165, f => f.RT);
            Botao_R1 = RoundButtonAnimatorFactory.Create(Content, commonX + 261, commonY + 195, f => f.RB);

            Botao_L2 = RoundButtonAnimatorFactory.Create(Content, commonX + -78, commonY + 182, f => f.LT);
            Botao_L1 = RoundButtonAnimatorFactory.Create(Content, commonX + -77, commonY + 212, f => f.LB);

            Corpo = SpriteSheet_Carolina.Load_Corpo(Content, commonX + 50, commonY + 50);
        }

        protected override void UnloadContent()
        {
        }

        protected override void Update(GameTime gameTime)
        {
            inputs.Update();

            LeftStick_X.Set(inputs.RS_X_Value * 7f);
            LeftStick_Y.Set(-inputs.RS_Y_Value * 7f);

            RightStick_X.Set(inputs.LS_X_Value * 7);
            RightStick_Y.Set(-inputs.LS_Y_Value * 7);

            Boca.Flag("triste", inputs.A);

            base.Update(gameTime);
        }

        EasyValue LeftStick_X = new EasyValue(2);
        EasyValue LeftStick_Y = new EasyValue(2);

        EasyValue RightStick_X = new EasyValue(2);
        EasyValue RightStick_Y = new EasyValue(2);

        DateTime horaDePiscar;
        Random Random = new Random();

        protected override void Draw(GameTime gameTime)
        {
            if (horaDePiscar < DateTime.Now)
            {
                horaDePiscar = DateTime.Now.AddSeconds(Random.Next(1, 10));
                Olhos.ActivateTrigger("piscar");
            }

            GraphicsDevice.Clear(
                Color.White//Color.Blue
                );
            spriteBatch.Begin();


            Corpo.Draw(spriteBatch, 0, 0);
            Transformacao.Draw(spriteBatch, 0, 0);

            Boca.Draw(spriteBatch, 0, 0);

            Olhos.Draw(spriteBatch, 0, 0);

            Botao_Down.Draw(spriteBatch, 0, 0);
            Botao_Up.Draw(spriteBatch, 0, 0);
            Botao_Left.Draw(spriteBatch, 0, 0);
            Botao_Right.Draw(spriteBatch, 0, 0);

            Botao_Y.Draw(spriteBatch, 0, 0);
            Botao_X.Draw(spriteBatch, 0, 0);
            Botao_B.Draw(spriteBatch, 0, 0);
            Botao_A.Draw(spriteBatch, 0, 0);

            Analog_R.Draw(spriteBatch, LeftStick_X, LeftStick_Y);
            Analog_L.Draw(spriteBatch, RightStick_X, RightStick_Y);

            Botao_R2.Draw(spriteBatch, 0, 0);
            Botao_R1.Draw(spriteBatch, 0, 0);

            Botao_L2.Draw(spriteBatch, 0, 0);
            Botao_L1.Draw(spriteBatch, 0, 0);

            spriteBatch.End();
            base.Draw(gameTime);
        }
    }
}
