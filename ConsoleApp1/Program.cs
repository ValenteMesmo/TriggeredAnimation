using Newtonsoft.Json;
using System.IO;
using System.Linq;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            var currentDir = new DirectoryInfo(Directory.GetCurrentDirectory());
            foreach (var file in currentDir.GetFiles())
            {
                if (file.Extension.ToLower() == ".json".ToLower())
                    ConvertFile(file);
                //if (file.Extension.ToLower() == ".swf".ToLower())
                //    file.Delete();
            }
        }

        private static void ConvertFile(FileInfo file)
        {
            var fileName = Path.GetFileNameWithoutExtension(file.Name);
            var content = JsonConvert.DeserializeObject<AnimationFramesFile>(File.ReadAllText(file.FullName));

            var rectangles = "";
            foreach (var item in content.frames.Select(f => f.frame))
            {
                rectangles += $@"
                new Rectangle({item.x}, {item.y}, {item.w}, {item.h}),";
            }
            rectangles = rectangles.Remove(rectangles.Length - 1);

            File.WriteAllText(
$"ContentManagerExtensions_{fileName}.cs",
$@"using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Graphics;
using TriggeredAnimation;

namespace MonogameAutoGeneratedContent{{
    public static class ContentManagerExtensions_{fileName}
    {{        
        public static Animation LoadAnimation_{fileName}(this ContentManager content)
        {{
            var texture = content.Load<Texture2D>(""{fileName}"");
            var animation = new AnimationFrameSelector(60, new Rectangle[]
            {{
                {rectangles}
            }});

            return new Animation(texture, animation);
        }}
    }}
}}");            
            file.Delete();
        }
    }
    public class AnimationFramesFile
    {
        public AnimationFramesFileFrame[] frames { get; set; }
    }

    public class AnimationFramesFileFrame
    {
        public string filename { get; set; }
        public AnimationFramesFileRectangle frame { get; set; }
    }

    public class AnimationFramesFileRectangle
    {
        public int x { get; set; }
        public int y { get; set; }
        public int w { get; set; }
        public int h { get; set; }
    }
}
